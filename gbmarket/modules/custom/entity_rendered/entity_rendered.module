<?php

/**
 * Implements hook_entity_property_info_alter().
 */
function entity_rendered_entity_property_info_alter(&$info) {
  foreach (entity_get_info() as $entity_type => $entity_info) {
    if (!entity_type_supports($entity_type, 'view')) {
      // The entity type doesn't support entity_view().
      continue;
    }

    $properties = &$info[$entity_type]['properties'];
    foreach ($entity_info['view modes'] as $view_mode => $view_mode_info) {
      $properties['rendered_' . $view_mode] = array(
        'label' => t('Rendered entity: @view_mode_label', array('@view_mode_label' => $view_mode_info['label'])),
        'description' => t('The entity rendered using the %view_mode view mode.', array('%view_mode' => $view_mode)),
        'type' => 'text',
        'getter callback' => '_entity_rendered_getter_callback',
        'entity type' => $entity_type,
        'view mode' => $view_mode,
      );
    }
  }
}

/**
 * Getter callback for the rendered version of an entity.
 */
function _entity_rendered_getter_callback($entity, $options, $name, $type, $info) {
  list($id, $vid, ) = entity_extract_ids($info['entity type'], $entity);
  return drupal_render(entity_view($info['entity type'], array($id => $entity), $info['view mode']));
}
